스코프란?
 자바스크립트에서 스코프는 "변수의 유효범위" 로 사용된다.
 스코프는 안쪽 스코프와 바깥쪽 스코프로 나뉘며
 바깥쪽 스코프에서 선언한 변수는 안쪽 스코프에서 사용 가능하다.
 반면에 안쪽에서 선언한 변수는 바깥쪽 스코프에서 사용 불가능하다.
 
 스코프의 규칙
 1. 안쪽 스코프에서 바깥쪽 스코프로 접근 가능, 반대는 불가능.
 2. 스코프는 중첩이 가능하다. ( 스코프 = 울타리 )
 가장 바깥스코프는 "전역 스코프(Global Scope)", 
 전역 외 다른 스코프는"지역 스코프(Local Scope)"로 부른다.
 "전역 스코프(Global Scope)"에서 선언한 변수는 "전역변수"이다.
 "지역 스코프(Local Scope)"에서 선언한 변수는 "지역변수"이다.
 *지역변수는 전역변수보다 더 높은 우선순위를 가진다.

 스코프의 종류
 1. 블록 스코프 (Block Scope)
 중괄호를 기준으로 범위가 구분된다.

 2. 함수 스코프 (function Scope)
 function 키워드가 등장하는 함수 선언식 및 함수 표현식은 함수 스코프이다.
 ! 이때 화살표 함수는 '블록 스코프'로 취급한다.
 ---------------------------------------------

 1. var 키워드
 var 키워드는 블록 스코프를 무시하고 함수 스코프만 따른다.
 (화살표 함수의 블록 스코프는 무시하지 않는다.)

 2. let 키워드
 let 키워드는 재선언을 방지한다. 
 (var 키워드는 재선언을 해도 에러가 안나는 이유로 let 키워드가 더 안전하다.)

 3. const 키워드
 변하지 않는 값(상수)을 정의할 때 사용한다.
 const는 재할당이 불가능하다. 값을 재할당할 경우 TypeError를 내므로,
 의도치않은 값의 변경을 막을 수 있다.
 값의 변경을 최소화하여 보다 안전한 프로그램을 만들 수 있다.

* 변수 선언에서 주의할 점
1. 전역 변수는 가장 바깥 스코프에 정의 한 변수이다. 따라서 어디서든 접근이 가능하다.
하지만 이 전역 변수를 많이 만드는 것은 좋지않다.
다른 함수 혹은 로직에 의해 "부수효과(side effect)" 문제가 발생한다.
그래서 전역 변수를 최소화하는 것은 좋은 방법이다.

2. 전역 변수를 var로 선언하게 되면 window 기능을 덮어씌어서 내장 기능을 사용할 수 없게 만들 수 있다.또한 블록 스코프를 무시해 재선언을 해도 에러를 내지 않아 let과 const를 주로 사용하는 것이 좋다.

3. 선언키워드(var, let, const) 없이 변수를 할당하면 해당 변수는 var로 선언한 전역 변수 처럼 취급된다.
